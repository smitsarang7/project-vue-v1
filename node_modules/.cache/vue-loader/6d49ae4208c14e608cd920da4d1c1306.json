{"remainingRequest":"/home/s7/E/workspace/project/project-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/s7/E/workspace/project/project-vue/src/components/AdminItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/s7/E/workspace/project/project-vue/src/components/AdminItem.vue","mtime":1574527213823},{"path":"/home/s7/E/workspace/project/project-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/s7/E/workspace/project/project-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/s7/E/workspace/project/project-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/s7/E/workspace/project/project-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1kYlRibCB9IGZyb20gJ21kYnZ1ZSc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICAgbmFtZTogJ0FkbWluSXRlbScsCiAgIGNvbXBvbmVudHM6IHsKICAgIG1kYlRibAogICB9LAogICBkYXRhKCl7CiAgICAgcmV0dXJuIHsKICAgICAgICAgY2l0eTonJywKICAgICAgICAgZGlyZWN0b3J5OltdCiAgICAgfQogICB9LAogICBhc3luYyBtb3VudGVkICgpIHsKICAgICB0cnkgewogICAgICAgICB2YXIgcmVzdWx0ID0gYXdhaXQgYXhpb3MoewogICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgIHVybDogJ2h0dHA6Ly8xMjcuMC4wLjE6ODAwMC9ncmFwaHFsLycsCiAgICAgICAgICAgZGF0YTogewogICAgICAgICAgIHF1ZXJ5OiBgCiAgICAgICAgICAgewogICAgICAgICAgICAgICBhbGxJdGVtc3sKICAgICAgICAgICAgICAgICAgIGVkZ2VzewogICAgICAgICAgICAgICAgICAgICAgIG5vZGV7CiAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkLAogICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtTmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbVByaWNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtQ2F0ZWdvcnl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhdGVnb3J5TmFtZQogICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICB9CiAgICAgICAgICAgfQogICAgICAgICAgIGAKICAgICAgICAgICB9CiAgICAgICB9KQogICAgICAgdGhpcy5kaXJlY3RvcnkgPSByZXN1bHQuZGF0YS5kYXRhLmFsbEl0ZW1zCiAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikKICAgICB9CiAgICAgfQogICB9CiA="},{"version":3,"sources":["AdminItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AdminItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <mdb-tbl responsiveSm>\n      {{directory}}\n      \n    </mdb-tbl>\n\n    <mdb-tbl responsiveMd>\n      \n    <form action=\"\" @submit.prevent=\"mounted()\">\n      <div class=\"col-sm-6\">\n        <input v-model=\"city\" city=\"\" type=\"text\" class=\"form-control\">\n        <button type=\"submit\" name=\"button\">Submit</button>\n      </div>\n    </form>   \n    <table class=\"table table-striped mt-4\">\n      <thead>\n      <tr>\n        <th scope=\"col\">name</th>\n        <th scope=\"col\">title</th>\n        <th scope=\"col\">city</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"input in directory.edges\" :key=\"input.id\">\n        <td>{{ input.node.itemName }}</td>\n        <td>{{ input.node.itemPrice }}</td>\n        <td>{{ input.node.itemCategory.categoryName }}</td>\n      </tr>\n      </tbody>\n    </table>    \n    </mdb-tbl>\n\n    <mdb-tbl responsiveLg>\n      ...\n    </mdb-tbl>\n\n    <mdb-tbl responsiveXl>\n      ...\n    </mdb-tbl>\n  </div>\n</template>\n<script>\n import { mdbTbl } from 'mdbvue';\n import axios from 'axios';\n export default {\n    name: 'AdminItem',\n    components: {\n     mdbTbl\n    },\n    data(){\n      return {\n          city:'',\n          directory:[]\n      }\n    },\n    async mounted () {\n      try {\n          var result = await axios({\n            method: 'POST',\n            url: 'http://127.0.0.1:8000/graphql/',\n            data: {\n            query: `\n            {\n                allItems{\n                    edges{\n                        node{\n                            id,\n                            itemName,\n                            itemPrice,\n                            itemCategory{\n                            categoryName\n                            }\n                        }\n                    }\n                }\n            }\n            `\n            }\n        })\n        this.directory = result.data.data.allItems\n        } catch (error) {\n          console.log(error)\n      }\n      }\n    }\n  </script>\n\n<style scoped>\n</style>"]}]}